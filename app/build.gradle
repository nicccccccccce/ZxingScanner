apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 8
        versionName properties.getProperty("VERSION_NAME")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}
def isSnapshot = version.endsWith('-SNAPSHOT')
def sonatypeRepositoryUrl
if (isSnapshot) {
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots-snapshots"
} else {
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots"
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

signing {
    sign configurations.archives
}
repositories {
    mavenCentral();
}

uploadArchives {
    repositories {
        mavenDeployer {
            //为Pom文件做数字签名
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            //指定项目部署到的中央库地址，UserName和Password就是Part 1中注册的账号。
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: properties.getProperty("ossrhUsername"), password: properties.getProperty("ossrhPassword"))
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: properties.getProperty("ossrhUsername"), password: properties.getProperty("ossrhPassword"))
            }
            pom.groupId = properties.getProperty("POM_GROUPID")
            pom.artifactId = properties.getProperty("POM_ARTIFACTID")
            pom.version = properties.getProperty("VERSION_NAME")
            pom.project {
                name project.name
                packaging properties.getProperty("POM_PROJECT_PACKAING")
                description properties.getProperty("POM_PROJECT_DESCRIPTION")
                url properties.getProperty("gitURL")

                scm {
                    url properties.getProperty("scmURL")
                    connection properties.getProperty("scmURL")
                    developerConnection properties.getProperty("scmDevURL")
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution properties.getProperty("POM_LICENCE_DIST")
                    }
                }
                developers {
                    developer {
                        id properties.getProperty("DEVELOPER_ID")
                        name properties.getProperty("DEVELOPER_NAME")
                    }
                }
            }
        }
    }
}
